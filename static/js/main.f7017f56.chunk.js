(this.webpackJsonpundefined=this.webpackJsonpundefined||[]).push([[0],{88:function(e,t,s){"use strict";s.r(t);var r=s(0),n=s.n(r),l=s(30),u=s.n(l),o=s(6),a=s(24),b=s(19),c=s(13),i=s.n(c),d=s(95),j=s(1);var O=function(e){var t=e.callback,s=e.buttonText;return Object(j.jsx)("div",{children:Object(j.jsx)(d.a,{variant:"primary",size:"lg",onClick:t,children:s})})};var g=function(e){var t=e.countriesInfo,s=e.buttonText,n=e.callback,l=Object(r.useState)(!1),u=Object(o.a)(l,2),a=u[0],c=u[1];function d(){return(d=Object(b.a)(i.a.mark((function e(){return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:c(!0),n(!0);case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return Object(j.jsxs)("div",{id:"start-new-game",children:[!a&&Object(j.jsx)("br",{}),!a&&Object(j.jsx)(O,{callback:function(){return d.apply(this,arguments)},buttonText:s}),a&&Object(j.jsx)(F,{countriesInfo:t})]})},m={Afghanistan:{best:null,bestBorders:null},Albania:{best:null,bestBorders:null},Algeria:{best:null,bestBorders:null},Andorra:{best:null,bestBorders:null},Angola:{best:null,bestBorders:null},"Antigua and Barbuda":{best:null,bestBorders:null},Argentina:{best:null,bestBorders:null},Armenia:{best:null,bestBorders:null},Australia:{best:null,bestBorders:null},Austria:{best:null,bestBorders:null},Azerbaijan:{best:null,bestBorders:null},Bahamas:{best:null,bestBorders:null},Bahrain:{best:null,bestBorders:null},Bangladesh:{best:null,bestBorders:null},Barbados:{best:null,bestBorders:null},Belarus:{best:null,bestBorders:null},Belgium:{best:null,bestBorders:null},Belize:{best:null,bestBorders:null},Benin:{best:null,bestBorders:null},Bhutan:{best:null,bestBorders:null},Bolivia:{best:null,bestBorders:null},"Bosnia and Herzegovina":{best:null,bestBorders:null},Botswana:{best:null,bestBorders:null},Brazil:{best:null,bestBorders:null},Brunei:{best:null,bestBorders:null},Bulgaria:{best:null,bestBorders:null},"Burkina Faso":{best:null,bestBorders:null},Burundi:{best:null,bestBorders:null},Cambodia:{best:null,bestBorders:null},Cameroon:{best:null,bestBorders:null},Canada:{best:null,bestBorders:null},"Cape Verde":{best:null,bestBorders:null},"Central African Republic":{best:null,bestBorders:null},Chad:{best:null,bestBorders:null},Chile:{best:null,bestBorders:null},China:{best:null,bestBorders:null},Colombia:{best:null,bestBorders:null},Comoros:{best:null,bestBorders:null},"Costa Rica":{best:null,bestBorders:null},Croatia:{best:null,bestBorders:null},Cuba:{best:null,bestBorders:null},Cyprus:{best:null,bestBorders:null},Czechia:{best:null,bestBorders:null},"DR Congo":{best:null,bestBorders:null},Denmark:{best:null,bestBorders:null},Djibouti:{best:null,bestBorders:null},Dominica:{best:null,bestBorders:null},"Dominican Republic":{best:null,bestBorders:null},Ecuador:{best:null,bestBorders:null},Egypt:{best:null,bestBorders:null},"El Salvador":{best:null,bestBorders:null},"Equatorial Guinea":{best:null,bestBorders:null},Eritrea:{best:null,bestBorders:null},Estonia:{best:null,bestBorders:null},Eswatini:{best:null,bestBorders:null},Ethiopia:{best:null,bestBorders:null},Fiji:{best:null,bestBorders:null},Finland:{best:null,bestBorders:null},France:{best:null,bestBorders:null},Gabon:{best:null,bestBorders:null},Gambia:{best:null,bestBorders:null},Georgia:{best:null,bestBorders:null},Germany:{best:null,bestBorders:null},Ghana:{best:null,bestBorders:null},Greece:{best:null,bestBorders:null},Greenland:{best:null,bestBorders:null},Grenada:{best:null,bestBorders:null},Guatemala:{best:null,bestBorders:null},Guinea:{best:null,bestBorders:null},Guyana:{best:null,bestBorders:null},Haiti:{best:null,bestBorders:null},Honduras:{best:null,bestBorders:null},Hungary:{best:null,bestBorders:null},Iceland:{best:null,bestBorders:null},India:{best:null,bestBorders:null},Indonesia:{best:null,bestBorders:null},Iran:{best:null,bestBorders:null},Iraq:{best:null,bestBorders:null},Ireland:{best:null,bestBorders:null},Israel:{best:null,bestBorders:null},Italy:{best:null,bestBorders:null},"Ivory Coast":{best:null,bestBorders:null},Jamaica:{best:null,bestBorders:null},Japan:{best:null,bestBorders:null},Jordan:{best:null,bestBorders:null},Kazakhstan:{best:null,bestBorders:null},Kenya:{best:null,bestBorders:null},Kiribati:{best:null,bestBorders:null},Kosovo:{best:null,bestBorders:null},Kuwait:{best:null,bestBorders:null},Kyrgyzstan:{best:null,bestBorders:null},Laos:{best:null,bestBorders:null},Latvia:{best:null,bestBorders:null},Lebanon:{best:null,bestBorders:null},Lesotho:{best:null,bestBorders:null},Liberia:{best:null,bestBorders:null},Libya:{best:null,bestBorders:null},Liechtenstein:{best:null,bestBorders:null},Lithuania:{best:null,bestBorders:null},Luxembourg:{best:null,bestBorders:null},Madagascar:{best:null,bestBorders:null},Malawi:{best:null,bestBorders:null},Malaysia:{best:null,bestBorders:null},Maldives:{best:null,bestBorders:null},Mali:{best:null,bestBorders:null},Malta:{best:null,bestBorders:null},"Marshall Islands":{best:null,bestBorders:null},Mauritania:{best:null,bestBorders:null},Mauritius:{best:null,bestBorders:null},Mexico:{best:null,bestBorders:null},Micronesia:{best:null,bestBorders:null},Moldova:{best:null,bestBorders:null},Monaco:{best:null,bestBorders:null},Mongolia:{best:null,bestBorders:null},Montenegro:{best:null,bestBorders:null},Morocco:{best:null,bestBorders:null},Mozambique:{best:null,bestBorders:null},Myanmar:{best:null,bestBorders:null},Namibia:{best:null,bestBorders:null},Nauru:{best:null,bestBorders:null},Nepal:{best:null,bestBorders:null},Netherlands:{best:null,bestBorders:null},"New Zealand":{best:null,bestBorders:null},Nicaragua:{best:null,bestBorders:null},Niger:{best:null,bestBorders:null},Nigeria:{best:null,bestBorders:null},"North Korea":{best:null,bestBorders:null},"North Macedonia":{best:null,bestBorders:null},Norway:{best:null,bestBorders:null},Oman:{best:null,bestBorders:null},Pakistan:{best:null,bestBorders:null},Palau:{best:null,bestBorders:null},Palestine:{best:null,bestBorders:null},Panama:{best:null,bestBorders:null},"Papua New Guinea":{best:null,bestBorders:null},Paraguay:{best:null,bestBorders:null},Peru:{best:null,bestBorders:null},Philippines:{best:null,bestBorders:null},Poland:{best:null,bestBorders:null},Portugal:{best:null,bestBorders:null},Qatar:{best:null,bestBorders:null},"Republic of the Congo":{best:null,bestBorders:null},Romania:{best:null,bestBorders:null},Russia:{best:null,bestBorders:null},Rwanda:{best:null,bestBorders:null},"Saint Kitts and Nevis":{best:null,bestBorders:null},"Saint Lucia":{best:null,bestBorders:null},"Saint Vincent and the Grenadines":{best:null,bestBorders:null},Samoa:{best:null,bestBorders:null},"San Marino":{best:null,bestBorders:null},"Saudi Arabia":{best:null,bestBorders:null},Senegal:{best:null,bestBorders:null},Serbia:{best:null,bestBorders:null},Seychelles:{best:null,bestBorders:null},"Sierra Leone":{best:null,bestBorders:null},Singapore:{best:null,bestBorders:null},Slovakia:{best:null,bestBorders:null},Slovenia:{best:null,bestBorders:null},"Solomon Islands":{best:null,bestBorders:null},Somalia:{best:null,bestBorders:null},"South Africa":{best:null,bestBorders:null},"South Korea":{best:null,bestBorders:null},"South Sudan":{best:null,bestBorders:null},Spain:{best:null,bestBorders:null},"Sri Lanka":{best:null,bestBorders:null},Sudan:{best:null,bestBorders:null},Suriname:{best:null,bestBorders:null},Sweden:{best:null,bestBorders:null},Switzerland:{best:null,bestBorders:null},Syria:{best:null,bestBorders:null},"S\xe3o Tom\xe9 and Pr\xedncipe":{best:null,bestBorders:null},Taiwan:{best:null,bestBorders:null},Tajikistan:{best:null,bestBorders:null},Tanzania:{best:null,bestBorders:null},Thailand:{best:null,bestBorders:null},"Timor-Leste":{best:null,bestBorders:null},Togo:{best:null,bestBorders:null},Tonga:{best:null,bestBorders:null},"Trinidad and Tobago":{best:null,bestBorders:null},Tunisia:{best:null,bestBorders:null},Turkey:{best:null,bestBorders:null},Turkmenistan:{best:null,bestBorders:null},Tuvalu:{best:null,bestBorders:null},Uganda:{best:null,bestBorders:null},Ukraine:{best:null,bestBorders:null},"United Arab Emirates":{best:null,bestBorders:null},"United Kingdom":{best:null,bestBorders:null},"United States":{best:null,bestBorders:null},Uruguay:{best:null,bestBorders:null},Uzbekistan:{best:null,bestBorders:null},Vanuatu:{best:null,bestBorders:null},"Vatican City":{best:null,bestBorders:null},Venezuela:{best:null,bestBorders:null},Vietnam:{best:null,bestBorders:null},"Western Sahara":{best:null,bestBorders:null},Yemen:{best:null,bestBorders:null},Zambia:{best:null,bestBorders:null},Zimbabwe:{best:null,bestBorders:null}};var h=function(e){var t=e.updateStatsCallback,s=e.country,n=e.numberOfGuesses,l=e.succeeded,u=Object(r.useState)(0),a=Object(o.a)(u,2),b=a[0],c=a[1],i=Object(r.useState)(0),d=Object(o.a)(i,2),O=d[0],g=d[1],h=Object(r.useState)(0),B=Object(o.a)(h,2),f=B[0],p=B[1],S=Object(r.useState)(0),x=Object(o.a)(S,2),y=x[0],v=x[1],C=Object(r.useState)(!1),I=Object(o.a)(C,2),w=I[0],k=I[1];return Object(r.useEffect)((function(){var e=t(),r=e.numberOfWins,u=e.numberOfGames,o=e.numberOfAttempts,a=e.streak;c(r),p(u),g(o),v(a);try{localStorage.setItem("numberOfWins",JSON.stringify(r)),localStorage.setItem("numberOfGames",JSON.stringify(u)),localStorage.setItem("numberOfAttempts",JSON.stringify(o)),localStorage.setItem("streak",JSON.stringify(a));var b=JSON.parse(localStorage.getItem("countryHighScores"))||m;if(l){var i=b[s].best;(!i||n<i)&&(b[s].best=n,k(!0))}else b[s].best=99;localStorage.setItem("countryHighScores",JSON.stringify(b))}catch(d){console.log("Unable to update stats")}}),[!0]),Object(j.jsx)("div",{id:"country-guesser-stats",children:O>0&&f>0&&Object(j.jsxs)("div",{children:[Object(j.jsx)("h1",{children:"Stats"}),l>0&&w&&Object(j.jsxs)("p",{children:["That was your best score for ",s,"!"]}),Object(j.jsxs)("p",{children:["Total games: ",f]}),Object(j.jsxs)("p",{children:["Number of wins: ",b]}),b>0&&y>0&&Object(j.jsxs)("p",{children:["You are on a ",y," game winning streak playing Country Guesser"]})]})})};function B(e){var t="";return e.forEach((function(e,s){var r=e.split(" ");r.forEach((function(e,t,s){s[t]=s[t].charAt(0).toUpperCase()+s[t].slice(1)}));var n=r.join(" ");t=(t=0===s?n:t+", "+n).replace(" And "," & ")})),t}var f=function(e){var t=e.countriesInfo,s=e.name,n=e.flag,l=e.map,u=e.guesses,a=Object(r.useState)(!1),b=Object(o.a)(a,2),c=b[0],i=b[1];return Object(j.jsxs)("div",{id:"failure-page",children:[!c&&Object(j.jsxs)("div",{id:"country-failure",children:[Object(j.jsx)("p",{style:{color:"red"},children:"You failed. Better luck next time"}),Object(j.jsxs)("p",{children:["The answer was ",Object(j.jsx)("a",{href:l,children:s})]}),Object(j.jsxs)("p",{children:["Your answer history was: ",B(u)]}),Object(j.jsx)("img",{style:{border:"solid"},src:n,alt:"Country Flag"})]}),!c&&Object(j.jsx)("br",{}),!c&&Object(j.jsx)(h,{updateStatsCallback:function(){return{numberOfWins:JSON.parse(localStorage.getItem("numberOfWins"))||0,numberOfGames:(JSON.parse(localStorage.getItem("numberOfGames"))||0)+1,numberOfAttempts:(JSON.parse(localStorage.getItem("numberOfAttempts"))||0)+u.length,streak:0}},country:s,numberOfGuesses:u.length,succeeded:!1}),Object(j.jsx)(g,{countriesInfo:t,buttonText:"Try again",callback:i})]})};var p=function(e){var t=e.duplicateGuess,s=e.knownCountry;return Object(j.jsxs)("div",{style:{color:"brown"},id:"invalid-guess-feedback",children:[t&&Object(j.jsx)("p",{children:"You've already tried that country!"}),!s&&Object(j.jsx)("p",{children:"Enter a valid country name"})]})};var S=function(e){var t=e.correctGuesses,s=e.incorrectGuesses,r=e.borderingCountriesCount,n=e.incorrectCount,l=6-n,u="You have ".concat(l,n>=5?" life remaining":" lives remaining"),o=r-t.length,a=t.length===r-1?"There is ".concat(o," bordering country remaining"):"There are ".concat(o," bordering countries remaining");return Object(j.jsxs)("div",{id:"bordering-countries-guess-feedback",children:[t.length>0&&Object(j.jsxs)("p",{style:{color:"green"},children:["Correct answers so far: ",B(t)]}),s.length>0&&Object(j.jsxs)("p",{style:{color:"red"},children:["Incorrect answers so far: ",B(s)]}),Object(j.jsx)("br",{}),Object(j.jsx)("p",{children:u}),Object(j.jsx)("p",{children:a}),Object(j.jsx)("br",{})]})};var x=function(e){var t=e.updateStatsCallback,s=e.country,n=e.numberOfGuesses,l=e.succeeded,u=Object(r.useState)(0),a=Object(o.a)(u,2),b=a[0],c=a[1],i=Object(r.useState)(0),d=Object(o.a)(i,2),O=d[0],g=d[1],h=Object(r.useState)(0),B=Object(o.a)(h,2),f=B[0],p=B[1],S=Object(r.useState)(0),x=Object(o.a)(S,2),y=x[0],v=x[1],C=Object(r.useState)(!1),I=Object(o.a)(C,2),w=I[0],k=I[1];return Object(r.useEffect)((function(){var e=t(),r=e.numberOfWins,u=e.numberOfGames,o=e.numberOfAttempts,a=e.numberOfCorrectAnswers,b=e.numberOfIncorrectAnswers,i=e.streak;c(r),p(u),g(o),v(i);try{localStorage.setItem("numberOfBorderWins",JSON.stringify(r)),localStorage.setItem("numberOfBorderGames",JSON.stringify(u)),localStorage.setItem("numberOfBorderAttempts",JSON.stringify(o)),localStorage.setItem("numberOfCorrectBorderAnswers",JSON.stringify(a)),localStorage.setItem("numberOfIncorrectBorderAnswers",JSON.stringify(b)),localStorage.setItem("borderStreak",JSON.stringify(i));var d=JSON.parse(localStorage.getItem("countryHighScores"))||m;if(l){var j=d[s].bestBorders;(!j||n<j)&&(d[s].bestBorders=n,k(!0))}else d[s].bestBorders=99;localStorage.setItem("countryHighScores",JSON.stringify(d))}catch(O){console.log("Unable to update stats")}}),[!0]),Object(j.jsx)("div",{id:"country-guesser-stats",children:f>0&&O>0&&Object(j.jsxs)("div",{children:[Object(j.jsx)("h1",{children:"Stats"}),l&&w&&Object(j.jsxs)("p",{children:["That was your best score for ",s,"!"]}),Object(j.jsxs)("p",{children:["Total games: ",f]}),Object(j.jsxs)("p",{children:["Number of wins: ",b]}),b>0&&y>0&&Object(j.jsxs)("p",{children:["You are on a ",y," game winning streak playing Bordering Countries"]})]})})};var y=function(e){var t=e.countriesInfo,s=e.name,n=e.map,l=e.borderingCountries,u=e.correctGuesses,a=e.guesses,b=a.length-u.length,c=l.length,i=l.filter((function(e){return!u.includes(e.toLowerCase())})),d=Object(r.useState)(!1),O=Object(o.a)(d,2),m=O[0],h=O[1];return Object(j.jsxs)("div",{id:"failure-page",children:[l&&!m&&Object(j.jsxs)("div",{id:"bordering-countries-failure",children:[Object(j.jsx)("p",{style:{color:"red"},children:"You failed. Better luck next time"}),Object(j.jsxs)("p",{children:["See ",s," on the ",Object(j.jsx)("a",{href:n,children:"map"})]}),0===u.length&&Object(j.jsxs)("p",{children:["You found none of the bordering countries and missed ",c]}),u.length>0&&Object(j.jsxs)("p",{children:["You found ",u.length," of ",c]}),u.length>0&&Object(j.jsxs)("p",{children:["You found: ",B(u)]}),i&&Object(j.jsxs)("p",{children:["You missed: ",B(i)]}),Object(j.jsxs)("p",{children:["Your answer history was: ",B(a)]})]}),!m&&Object(j.jsx)("br",{}),!m&&Object(j.jsx)(x,{updateStatsCallback:function(){var e=JSON.parse(localStorage.getItem("numberOfBorderWins"))||0,t=JSON.parse(localStorage.getItem("numberOfBorderGames"))||0,s=JSON.parse(localStorage.getItem("numberOfBorderAttempts"))||0,r=JSON.parse(localStorage.getItem("numberOfCorrectBorderAnswers"))||0,n=JSON.parse(localStorage.getItem("numberOfIncorrectBorderAnswers"))||0;return{numberOfWins:e,numberOfGames:t+1,numberOfAttempts:s+a.length,numberOfCorrectAnswers:r+u.length,numberOfIncorrectAnswers:n+b,streak:0}},country:s,numberOfGuesses:a.length,succeeded:!1}),Object(j.jsx)(g,{countriesInfo:t,buttonText:"Try again",callback:h})]})};var v=function(e){var t=e.countriesInfo,s=e.incorrectGuesses,n=e.correctGuesses,l=e.name,u=e.map,a=e.guesses,b=s.length,c=1===b?"answer":"answers",i=1===n.length?"Well done! You found the only bordering country of ".concat(l," with ").concat(b," incorrect ").concat(c):"Well done! You found the ".concat(n.length," bordering countries of ").concat(l," with ").concat(b," incorrect answers"),d=Object(r.useState)(!1),O=Object(o.a)(d,2),m=O[0],h=O[1];return Object(j.jsxs)("div",{children:[!m&&Object(j.jsxs)("div",{id:"successful-bordering-countries-game",children:[Object(j.jsx)("h5",{style:{color:"green"},children:i}),Object(j.jsxs)("p",{children:["See ",Object(j.jsx)("a",{href:u,children:l})," on the map"]}),Object(j.jsxs)("p",{children:["Your answer history was: ",B(a)]})]}),!m&&Object(j.jsx)("br",{}),!m&&Object(j.jsx)(x,{updateStatsCallback:function(){var e=JSON.parse(localStorage.getItem("numberOfBorderWins"))||0,t=JSON.parse(localStorage.getItem("numberOfBorderGames"))||0,s=JSON.parse(localStorage.getItem("numberOfBorderAttempts"))||0,r=JSON.parse(localStorage.getItem("numberOfCorrectBorderAnswers"))||0,l=JSON.parse(localStorage.getItem("numberOfIncorrectBorderAnswers"))||0,u=JSON.parse(localStorage.getItem("borderStreak"))||0;return{numberOfWins:e+1,numberOfGames:t+1,numberOfAttempts:s+a.length,numberOfCorrectAnswers:r+n.length,numberOfIncorrectAnswers:l+b,streak:u+1}},country:l,numberOfGuesses:a.length,succeeded:!0}),Object(j.jsx)(g,{countriesInfo:t,buttonText:"Play again",callback:h})]})},C=s(93),I=s(48);s(68);var w=function(e){var t=e.possibleCountries,s=e.value,n=e.setValue,l=e.handleSubmit;return Object(j.jsxs)(C.a,{onSubmit:l,children:[Object(j.jsx)(r.Fragment,{children:Object(j.jsx)(C.a.Group,{className:"mb-3",children:Object(j.jsx)(I.a,{id:"country-search",onChange:n,options:t,placeholder:"Select your country",selected:s})})}),Object(j.jsx)(d.a,{variant:"primary",type:"submit",children:"Guess"})]})};var k=function(e){var t=e.clues;return Object(j.jsx)("div",{id:"country-initial-clue",children:t&&Object(j.jsxs)("p",{children:["The remaining bordering countries begin with the following letters: ",t]})})};var N=function(e,t,s){var r=!1,n=!1,l=!1;return e.length>0&&t.find((function(t){t.toLowerCase()===e&&(n=!0,r=!0),s.includes(e)&&(l=!0)})),{isValidCountry:r,knownCountry:n,duplicateGuess:l}};var G=function(e){var t=e.countriesInfo,s=e.name,n=e.borderingCountries,l=e.possibleCountries,u=e.map,b=n.length>1?"There are ".concat(n.length," bordering countries to find in total"):"There is 1 bordering country to find",c=Object(r.useState)([]),i=Object(o.a)(c,2),d=i[0],O=i[1],g=Object(r.useState)(!1),m=Object(o.a)(g,2),h=m[0],f=m[1],x=Object(r.useState)([]),C=Object(o.a)(x,2),I=C[0],G=C[1],A=Object(r.useState)(0),J=Object(o.a)(A,2),T=J[0],M=J[1],E=Object(r.useState)([]),L=Object(o.a)(E,2),W=L[0],Y=L[1],F=Object(r.useState)(!1),U=Object(o.a)(F,2),P=U[0],z=U[1],H=Object(r.useState)(!1),K=Object(o.a)(H,2),V=K[0],D=K[1],R=Object(r.useState)(!1),q=Object(o.a)(R,2),Z=q[0],Q=q[1],X=Object(r.useState)(!0),$=Object(o.a)(X,2),_=$[0],ee=$[1],te=Object(r.useState)([]),se=Object(o.a)(te,2),re=se[0],ne=se[1],le=Object(r.useState)(!1),ue=Object(o.a)(le,2),oe=ue[0],ae=ue[1],be=Object(r.useState)(),ce=Object(o.a)(be,2),ie=ce[0],de=ce[1];return Object(r.useEffect)((function(){T>=6&&D(!0);var e=function(){if(I.length>=4){var e=[];return n.forEach((function(t){if(!d.includes(t.toLowerCase())){var s=t.charAt(0).toUpperCase();e.push(s)}})),B(e)}}();de(e)})),Object(j.jsxs)("div",{id:"borders",children:[!Z&&!V&&Object(j.jsxs)("div",{children:[Object(j.jsx)("h2",{children:"Bordering Countries"}),Object(j.jsxs)("p",{children:["Your country is: ",s]}),Object(j.jsx)("p",{children:b}),Object(j.jsx)("div",{id:"borders-form",children:Object(j.jsx)(w,{possibleCountries:l,value:re,setValue:ne,handleSubmit:function(e){e.preventDefault(),ne([""]);var t=e.target[0].value.toLowerCase().trim(),r=N(t,l,W),u=r.isValidCountry,o=r.knownCountry,b=r.duplicateGuess;f(!1),t===s.toLowerCase()?(ae(!0),u=!1):ae(!1),ee(o),z(b),u&&o&&!b&&function(e){n.map((function(e){return e.toLowerCase()})).includes(e)?(O([].concat(Object(a.a)(d),[e])),f(!0),d.length+1===n.length&&Q(!0)):(G([].concat(Object(a.a)(I),[e])),M(T+1),f(!1));Y([].concat(Object(a.a)(W),[e]))}(t)}})})]}),W.length>0&&!V&&!Z&&Object(j.jsx)(S,{correctGuesses:d,incorrectGuesses:I,incorrectCount:T,borderingCountriesCount:n.length}),!Z&&!h&&Object(j.jsxs)("div",{id:"invalid-border-guess-feedback",children:[Object(j.jsx)(p,{duplicateGuess:P,knownCountry:_}),oe&&Object(j.jsx)("p",{style:{color:"brown"},children:"That's the actual country! Guess the bordering ones instead"})]}),!Z&&!V&&ie&&Object(j.jsx)(k,{clues:ie}),V&&!Z&&Object(j.jsx)(y,{countriesInfo:t,name:s,map:u,correctGuesses:d,borderingCountries:n,guesses:W}),Z&&Object(j.jsx)(v,{countriesInfo:t,correctGuesses:d,incorrectGuesses:I,name:s,map:u,guesses:W})]})};var A=function(e){var t=e.countriesInfo,s=e.incorrectCount,n=e.guesses,l=e.name,u=e.borderingCountries,a=e.possibleCountries,c=e.flag,d=e.map,m=Object(r.useState)(!1),f=Object(o.a)(m,2),p=f[0],S=f[1],x=Object(r.useState)(!1),y=Object(o.a)(x,2),v=y[0],C=y[1];function I(){return(I=Object(b.a)(i.a.mark((function e(){return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:S(!0);case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return Object(j.jsxs)("div",{children:[!p&&Object(j.jsxs)("div",{id:"successful-country-game",children:[0===s&&Object(j.jsxs)("h5",{style:{color:"green"},children:["Amazing! You got ",Object(j.jsx)("a",{href:d,children:l})," in one!"]}),s>0&&Object(j.jsxs)("h5",{style:{color:"green"},children:["Well done! It took you ",s+1," attempts to get ",Object(j.jsx)("a",{href:d,children:l})]}),s>0&&Object(j.jsxs)("p",{children:["Your answer history was: ",B(n)]}),Object(j.jsx)("img",{style:{border:"solid"},src:c,alt:"Country Flag"})]}),!p&&Object(j.jsx)("br",{}),!p&&Object(j.jsx)(h,{updateStatsCallback:function(){var e=JSON.parse(localStorage.getItem("numberOfWins"))||0,t=JSON.parse(localStorage.getItem("numberOfGames"))||0,s=JSON.parse(localStorage.getItem("numberOfAttempts"))||0,r=JSON.parse(localStorage.getItem("streak"))||0;return{numberOfWins:e+1,numberOfGames:t+1,numberOfAttempts:s+n.length,streak:r+1}},country:l,numberOfGuesses:n.length,succeeded:!0}),!p&&u.length>0&&Object(j.jsx)(O,{callback:function(){C(!0),S(!0)},buttonText:"Guess the bordering countries"}),!v&&Object(j.jsx)(g,{countriesInfo:t,buttonText:"Play again",callback:function(){return I.apply(this,arguments)}}),p&&v&&Object(j.jsx)(G,{countriesInfo:t,name:l,borderingCountries:u,possibleCountries:a,map:d})]})};var J=function(e){var t=e.incorrectCount,s=e.guesses,r=e.duplicateGuess,n=e.guessedBorderingCountry;return Object(j.jsxs)("div",{id:"country-guess-feedback",children:[!r&&Object(j.jsxs)("p",{style:{color:"red"},children:["Incorrect! That was attempt number ",t,"/6."]}),n&&Object(j.jsx)("p",{children:"You're getting close!"}),Object(j.jsxs)("p",{children:["Your answers so far: ",B(s)]})]})};var T=function(e){var t=e.countriesInfo,s=e.country,n=e.possibleCountries,l=s.name,u=s.population,b=s.flag,c=s.landlocked,i=s.region,d=s.subregion,O=s.map,g=s.capital,m=s.borderingCountries,h=Object(r.useState)(!1),B=Object(o.a)(h,2),S=B[0],x=B[1],y=Object(r.useState)(0),v=Object(o.a)(y,2),C=v[0],I=v[1],k=Object(r.useState)([]),G=Object(o.a)(k,2),T=G[0],M=G[1],E=Object(r.useState)(!1),L=Object(o.a)(E,2),W=L[0],Y=L[1],F=Object(r.useState)(!1),U=Object(o.a)(F,2),P=U[0],z=U[1],H=Object(r.useState)(!0),K=Object(o.a)(H,2),V=K[0],D=K[1],R=Object(r.useState)([""]),q=Object(o.a)(R,2),Z=q[0],Q=q[1],X=Object(r.useState)(!1),$=Object(o.a)(X,2),_=$[0],ee=$[1];return Object(r.useEffect)((function(){C>=6&&z(!0)})),Object(j.jsxs)("div",{id:"country-guesser",className:"component",children:[!P&&!S&&Object(j.jsxs)("div",{id:"country-info",children:[Object(j.jsx)("h2",{children:"Mystery Country"}),Object(j.jsxs)("p",{children:["Population = ",u]}),C>=1&&Object(j.jsxs)("p",{children:["Region = ",i]}),C>=2&&Object(j.jsx)("p",{children:c}),C>=3&&Object(j.jsxs)("p",{children:["Sub region = ",d]}),C>=4&&Object(j.jsxs)("div",{children:[Object(j.jsx)("p",{children:"Flag: "}),Object(j.jsx)("img",{style:{border:"solid"},src:b,alt:"Country Flag"})]}),C>=5&&Object(j.jsxs)("p",{children:["Capital city = ",g]})]}),Object(j.jsx)("div",{id:"country-form",children:!S&&!P&&Object(j.jsx)(w,{possibleCountries:n,value:Z,setValue:Q,handleSubmit:function(e){e.preventDefault(),Q([""]);var t=e.target[0].value.toLowerCase().trim(),s=N(t,n,T),r=s.isValidCountry,u=s.knownCountry,o=s.duplicateGuess;D(u),Y(o),r&&u&&!o&&function(e){D(!0),Y(!1),e===l.toLowerCase()?x(!0):(I(C+1),x(!1),function(e){!S&&m.find((function(t){return t.toLowerCase()===e}))?ee(!0):ee(!1)}(e));M([].concat(Object(a.a)(T),[e]))}(t)}})}),Object(j.jsx)(p,{duplicateGuess:W,knownCountry:V}),!S&&T.length>0&&!P&&Object(j.jsx)(J,{guesses:T,incorrectCount:C,duplicateGuess:W,guessedBorderingCountry:_}),S&&!P&&Object(j.jsx)(A,{countriesInfo:t,name:l,map:O,flag:b,incorrectCount:C,guesses:T,borderingCountries:m,possibleCountries:n}),P&&Object(j.jsx)(f,{countriesInfo:t,name:l,map:O,flag:b,guesses:T})]})},M=s(47),E=s.n(M);function L(){return(L=Object(b.a)(i.a.mark((function e(){var t,s,r,n,l,u;return i.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,E.a.get("https://restcountries.com/v3.1/all");case 3:return t=e.sent,s=t.data,r=[],n=[],l=["Taiwan","Greenland","Palestine","Kosovo","Western Sahara"],s.forEach((function(e){var t=e.name.common;if(e.unMember&&e.independent||l.includes(t)){r.push(t);var s={name:t,code:e.cca3};n.push(s)}})),u={countriesArray:r.sort(),countryCodeMapping:n,responseBody:s},e.abrupt("return",u);case 13:e.prev=13,e.t0=e.catch(0),console.log(e.t0);case 16:case"end":return e.stop()}}),e,null,[[0,13]])})))).apply(this,arguments)}function W(e,t){var s=[];return e&&e.forEach((function(e){t.find((function(t){t.code===e&&s.push(t.name)}))})),s}var Y=function(){return L.apply(this,arguments)};var F=function(e){var t=e.countriesInfo,s=t.countryCodeMapping,r=t.countriesArray,n=function(e,t,s){var r,n=e[Math.floor(Math.random()*e.length)],l=t.find((function(e){return e.name.common.toLowerCase()===n.toLowerCase()}));return{name:l.name.common,borderingCountries:W(l.borders,s),capital:B(l.capital),landlocked:l.landlocked?"The country is landlocked":"The country has a coastline",map:l.maps.googleMaps,population:(r=l.population,r.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")),flag:l.flags.png,region:l.region,subregion:l.subregion}}(r,t.responseBody,s);return Object(j.jsx)("div",{id:"country",children:n&&Object(j.jsx)(T,{countriesInfo:t,country:n,possibleCountries:r})})},U=s(94);var P=function(){var e=Object(r.useState)(!1),t=Object(o.a)(e,2),s=t[0],n=t[1],l=Object(r.useState)("Show Stats"),u=Object(o.a)(l,2),a=u[0],b=u[1],c=JSON.parse(localStorage.getItem("countryHighScores"))||m,i=Object.entries(c).map((function(e){return{name:e[0],stats:e[1]}})),d=JSON.parse(localStorage.getItem("numberOfGames")),g=JSON.parse(localStorage.getItem("numberOfWins")),h=JSON.parse(localStorage.getItem("numberOfAttempts")),B=JSON.parse(localStorage.getItem("streak")),f=JSON.parse(localStorage.getItem("numberOfBorderGames")),p=JSON.parse(localStorage.getItem("numberOfBorderWins")),S=JSON.parse(localStorage.getItem("numberOfCorrectBorderAnswers")),x=JSON.parse(localStorage.getItem("numberOfIncorrectBorderAnswers")),y=JSON.parse(localStorage.getItem("borderStreak"));return Object(j.jsxs)("div",{id:"stats-page",children:[Object(j.jsx)("br",{}),Object(j.jsx)(O,{callback:function(){s?(n(!1),b("Show Stats")):(n(!0),b("Hide Stats"))},buttonText:a}),s&&Object(j.jsxs)("div",{children:[Object(j.jsx)("h2",{children:"Country Guesser Stats"}),Object(j.jsxs)("p",{children:["Total games: ",d]}),Object(j.jsxs)("p",{children:["Number of wins: ",g]}),g>0&&Object(j.jsxs)("p",{children:["Win percentage: ",(g/d*100).toFixed(1),"%"]}),g>0&&Object(j.jsxs)("p",{children:["Number of guesses per correct answer: ",(h/g).toFixed(1)]}),g>0&&Object(j.jsxs)("p",{children:["Streak: ",B]}),Object(j.jsx)("h2",{children:"Bordering Countries Guesser Stats"}),Object(j.jsxs)("p",{children:["Total games: ",f]}),Object(j.jsxs)("p",{children:["Number of wins: ",p]}),p>0&&Object(j.jsxs)("p",{children:["Win percentage: ",(p/f*100).toFixed(1),"%"]}),S>0&&Object(j.jsxs)("p",{children:["Average number of correct answers per game: ",(S/f).toFixed(1)]}),x>0&&Object(j.jsxs)("p",{children:["Average number of incorrect answers per game: ",(x/f).toFixed(1)]}),p>0&&Object(j.jsxs)("p",{children:["Streak: ",y]}),Object(j.jsx)("h2",{children:"Country Stats"}),Object(j.jsx)(U.a,{children:i.map((function(e,t){if(e.stats.best||e.stats.bestBorders){var s=99===e.stats.best?"FAILED":e.stats.best,r=99===e.stats.bestBorders?"FAILED":e.stats.bestBorders;return Object(j.jsxs)(U.a.Item,{children:[Object(j.jsx)("b",{children:e.name})," ",Object(j.jsx)("br",{}),"Country Guesser High Score: ",s||"N/A"," ",Object(j.jsx)("br",{}),"Bordering Countries Guesser High Score: ",r||"N/A"]},t)}}))})]})]})};var z=function(){var e=Object(r.useState)(),t=Object(o.a)(e,2),s=t[0],n=t[1],l=Object(r.useState)(!1),u=Object(o.a)(l,2),a=u[0],b=u[1];return Object(r.useEffect)((function(){a||Y().then((function(e){b(!0),n(e)}))})),Object(j.jsxs)("div",{id:"app",children:[Object(j.jsx)("h1",{children:"FUN WITH COUNTRIES!"}),s&&Object(j.jsx)(F,{countriesInfo:s}),Object(j.jsx)(P,{}),Object(j.jsx)("link",{rel:"stylesheet",href:"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css",integrity:"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3",crossOrigin:"anonymous"})]})};u.a.render(Object(j.jsx)(n.a.StrictMode,{children:Object(j.jsx)(z,{})}),document.getElementById("root"))}},[[88,1,2]]]);
//# sourceMappingURL=main.f7017f56.chunk.js.map