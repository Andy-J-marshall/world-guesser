(this.webpackJsonpundefined=this.webpackJsonpundefined||[]).push([[0],{89:function(e,t,s){},90:function(e,t,s){"use strict";s.r(t);var r=s(0),n=s.n(r),l=s(31),u=s.n(l),a=s(6),o=s(24),b=s(95),c=s(96),i=s(47),d=s(19),j=s(13),O=s.n(j),g=s(99),h=s(1);var m=function(e){var t=e.callback,s=e.buttonText;return Object(h.jsx)("div",{children:Object(h.jsx)(g.a,{variant:"light",size:"lg",onClick:t,children:s})})};var B=function(e){var t=e.countriesInfo,s=e.buttonText,n=e.callback,l=Object(r.useState)(!1),u=Object(a.a)(l,2),o=u[0],b=u[1];function c(){return(c=Object(d.a)(O.a.mark((function e(){return O.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:b(!0),n(!0);case 2:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return Object(h.jsxs)("div",{id:"start-new-game",children:[!o&&Object(h.jsx)(m,{callback:function(){return c.apply(this,arguments)},buttonText:s}),o&&Object(h.jsx)(P,{countriesInfo:t})]})},f={Afghanistan:{best:null,bestBorders:null},Albania:{best:null,bestBorders:null},Algeria:{best:null,bestBorders:null},Andorra:{best:null,bestBorders:null},Angola:{best:null,bestBorders:null},"Antigua and Barbuda":{best:null,bestBorders:null},Argentina:{best:null,bestBorders:null},Armenia:{best:null,bestBorders:null},Australia:{best:null,bestBorders:null},Austria:{best:null,bestBorders:null},Azerbaijan:{best:null,bestBorders:null},Bahamas:{best:null,bestBorders:null},Bahrain:{best:null,bestBorders:null},Bangladesh:{best:null,bestBorders:null},Barbados:{best:null,bestBorders:null},Belarus:{best:null,bestBorders:null},Belgium:{best:null,bestBorders:null},Belize:{best:null,bestBorders:null},Benin:{best:null,bestBorders:null},Bhutan:{best:null,bestBorders:null},Bolivia:{best:null,bestBorders:null},"Bosnia and Herzegovina":{best:null,bestBorders:null},Botswana:{best:null,bestBorders:null},Brazil:{best:null,bestBorders:null},Brunei:{best:null,bestBorders:null},Bulgaria:{best:null,bestBorders:null},"Burkina Faso":{best:null,bestBorders:null},Burundi:{best:null,bestBorders:null},Cambodia:{best:null,bestBorders:null},Cameroon:{best:null,bestBorders:null},Canada:{best:null,bestBorders:null},"Cape Verde":{best:null,bestBorders:null},"Central African Republic":{best:null,bestBorders:null},Chad:{best:null,bestBorders:null},Chile:{best:null,bestBorders:null},China:{best:null,bestBorders:null},Colombia:{best:null,bestBorders:null},Comoros:{best:null,bestBorders:null},"Costa Rica":{best:null,bestBorders:null},Croatia:{best:null,bestBorders:null},Cuba:{best:null,bestBorders:null},Cyprus:{best:null,bestBorders:null},Czechia:{best:null,bestBorders:null},"DR Congo":{best:null,bestBorders:null},Denmark:{best:null,bestBorders:null},Djibouti:{best:null,bestBorders:null},Dominica:{best:null,bestBorders:null},"Dominican Republic":{best:null,bestBorders:null},Ecuador:{best:null,bestBorders:null},Egypt:{best:null,bestBorders:null},"El Salvador":{best:null,bestBorders:null},"Equatorial Guinea":{best:null,bestBorders:null},Eritrea:{best:null,bestBorders:null},Estonia:{best:null,bestBorders:null},Eswatini:{best:null,bestBorders:null},Ethiopia:{best:null,bestBorders:null},Fiji:{best:null,bestBorders:null},Finland:{best:null,bestBorders:null},France:{best:null,bestBorders:null},Gabon:{best:null,bestBorders:null},Gambia:{best:null,bestBorders:null},Georgia:{best:null,bestBorders:null},Germany:{best:null,bestBorders:null},Ghana:{best:null,bestBorders:null},Greece:{best:null,bestBorders:null},Greenland:{best:null,bestBorders:null},Grenada:{best:null,bestBorders:null},Guatemala:{best:null,bestBorders:null},Guinea:{best:null,bestBorders:null},Guyana:{best:null,bestBorders:null},Haiti:{best:null,bestBorders:null},Honduras:{best:null,bestBorders:null},Hungary:{best:null,bestBorders:null},Iceland:{best:null,bestBorders:null},India:{best:null,bestBorders:null},Indonesia:{best:null,bestBorders:null},Iran:{best:null,bestBorders:null},Iraq:{best:null,bestBorders:null},Ireland:{best:null,bestBorders:null},Israel:{best:null,bestBorders:null},Italy:{best:null,bestBorders:null},"Ivory Coast":{best:null,bestBorders:null},Jamaica:{best:null,bestBorders:null},Japan:{best:null,bestBorders:null},Jordan:{best:null,bestBorders:null},Kazakhstan:{best:null,bestBorders:null},Kenya:{best:null,bestBorders:null},Kiribati:{best:null,bestBorders:null},Kosovo:{best:null,bestBorders:null},Kuwait:{best:null,bestBorders:null},Kyrgyzstan:{best:null,bestBorders:null},Laos:{best:null,bestBorders:null},Latvia:{best:null,bestBorders:null},Lebanon:{best:null,bestBorders:null},Lesotho:{best:null,bestBorders:null},Liberia:{best:null,bestBorders:null},Libya:{best:null,bestBorders:null},Liechtenstein:{best:null,bestBorders:null},Lithuania:{best:null,bestBorders:null},Luxembourg:{best:null,bestBorders:null},Madagascar:{best:null,bestBorders:null},Malawi:{best:null,bestBorders:null},Malaysia:{best:null,bestBorders:null},Maldives:{best:null,bestBorders:null},Mali:{best:null,bestBorders:null},Malta:{best:null,bestBorders:null},"Marshall Islands":{best:null,bestBorders:null},Mauritania:{best:null,bestBorders:null},Mauritius:{best:null,bestBorders:null},Mexico:{best:null,bestBorders:null},Micronesia:{best:null,bestBorders:null},Moldova:{best:null,bestBorders:null},Monaco:{best:null,bestBorders:null},Mongolia:{best:null,bestBorders:null},Montenegro:{best:null,bestBorders:null},Morocco:{best:null,bestBorders:null},Mozambique:{best:null,bestBorders:null},Myanmar:{best:null,bestBorders:null},Namibia:{best:null,bestBorders:null},Nauru:{best:null,bestBorders:null},Nepal:{best:null,bestBorders:null},Netherlands:{best:null,bestBorders:null},"New Zealand":{best:null,bestBorders:null},Nicaragua:{best:null,bestBorders:null},Niger:{best:null,bestBorders:null},Nigeria:{best:null,bestBorders:null},"North Korea":{best:null,bestBorders:null},"North Macedonia":{best:null,bestBorders:null},Norway:{best:null,bestBorders:null},Oman:{best:null,bestBorders:null},Pakistan:{best:null,bestBorders:null},Palau:{best:null,bestBorders:null},Palestine:{best:null,bestBorders:null},Panama:{best:null,bestBorders:null},"Papua New Guinea":{best:null,bestBorders:null},Paraguay:{best:null,bestBorders:null},Peru:{best:null,bestBorders:null},Philippines:{best:null,bestBorders:null},Poland:{best:null,bestBorders:null},Portugal:{best:null,bestBorders:null},Qatar:{best:null,bestBorders:null},"Republic of the Congo":{best:null,bestBorders:null},Romania:{best:null,bestBorders:null},Russia:{best:null,bestBorders:null},Rwanda:{best:null,bestBorders:null},"Saint Kitts and Nevis":{best:null,bestBorders:null},"Saint Lucia":{best:null,bestBorders:null},"Saint Vincent and the Grenadines":{best:null,bestBorders:null},Samoa:{best:null,bestBorders:null},"San Marino":{best:null,bestBorders:null},"Saudi Arabia":{best:null,bestBorders:null},Senegal:{best:null,bestBorders:null},Serbia:{best:null,bestBorders:null},Seychelles:{best:null,bestBorders:null},"Sierra Leone":{best:null,bestBorders:null},Singapore:{best:null,bestBorders:null},Slovakia:{best:null,bestBorders:null},Slovenia:{best:null,bestBorders:null},"Solomon Islands":{best:null,bestBorders:null},Somalia:{best:null,bestBorders:null},"South Africa":{best:null,bestBorders:null},"South Korea":{best:null,bestBorders:null},"South Sudan":{best:null,bestBorders:null},Spain:{best:null,bestBorders:null},"Sri Lanka":{best:null,bestBorders:null},Sudan:{best:null,bestBorders:null},Suriname:{best:null,bestBorders:null},Sweden:{best:null,bestBorders:null},Switzerland:{best:null,bestBorders:null},Syria:{best:null,bestBorders:null},"S\xe3o Tom\xe9 and Pr\xedncipe":{best:null,bestBorders:null},Taiwan:{best:null,bestBorders:null},Tajikistan:{best:null,bestBorders:null},Tanzania:{best:null,bestBorders:null},Thailand:{best:null,bestBorders:null},"Timor-Leste":{best:null,bestBorders:null},Togo:{best:null,bestBorders:null},Tonga:{best:null,bestBorders:null},"Trinidad and Tobago":{best:null,bestBorders:null},Tunisia:{best:null,bestBorders:null},Turkey:{best:null,bestBorders:null},Turkmenistan:{best:null,bestBorders:null},Tuvalu:{best:null,bestBorders:null},Uganda:{best:null,bestBorders:null},Ukraine:{best:null,bestBorders:null},"United Arab Emirates":{best:null,bestBorders:null},"United Kingdom":{best:null,bestBorders:null},"United States":{best:null,bestBorders:null},Uruguay:{best:null,bestBorders:null},Uzbekistan:{best:null,bestBorders:null},Vanuatu:{best:null,bestBorders:null},"Vatican City":{best:null,bestBorders:null},Venezuela:{best:null,bestBorders:null},Vietnam:{best:null,bestBorders:null},"Western Sahara":{best:null,bestBorders:null},Yemen:{best:null,bestBorders:null},Zambia:{best:null,bestBorders:null},Zimbabwe:{best:null,bestBorders:null}};var p=function(e){var t=e.updateStatsCallback,s=e.country,n=e.numberOfGuesses,l=e.succeeded,u=Object(r.useState)(0),o=Object(a.a)(u,2),b=o[0],c=o[1],i=Object(r.useState)(0),d=Object(a.a)(i,2),j=d[0],O=d[1],g=Object(r.useState)(0),m=Object(a.a)(g,2),B=m[0],p=m[1],x=Object(r.useState)(0),S=Object(a.a)(x,2),y=S[0],v=S[1],C=Object(r.useState)(!1),I=Object(a.a)(C,2),w=I[0],k=I[1];return Object(r.useEffect)((function(){var e=t(),r=e.numberOfWins,u=e.numberOfGames,a=e.numberOfAttempts,o=e.streak;c(r),p(u),O(a),v(o);try{localStorage.setItem("numberOfWins",JSON.stringify(r)),localStorage.setItem("numberOfGames",JSON.stringify(u)),localStorage.setItem("numberOfAttempts",JSON.stringify(a)),localStorage.setItem("streak",JSON.stringify(o));var b=JSON.parse(localStorage.getItem("countryHighScores"))||f;if(l){var i=b[s].best;(!i||n<i)&&(b[s].best=n,k(!0))}else b[s].best=99;localStorage.setItem("countryHighScores",JSON.stringify(b))}catch(d){console.log("Unable to update stats")}}),[!0]),Object(h.jsx)("div",{id:"country-guesser-stats",children:j>0&&B>0&&Object(h.jsxs)("div",{children:[Object(h.jsx)("h2",{children:"Stats"}),l>0&&w&&Object(h.jsxs)("p",{children:["That was your best score for ",s,"!"]}),Object(h.jsxs)("p",{children:["Total games: ",B]}),Object(h.jsxs)("p",{children:["Number of wins: ",b]}),b>0&&y>0&&Object(h.jsxs)("p",{children:["You are on a ",y," game winning streak playing Country Guesser"]})]})})};function x(e){var t="";return e.forEach((function(e,s){var r=e.split(" ");r.forEach((function(e,t,s){s[t]=s[t].charAt(0).toUpperCase()+s[t].slice(1)}));var n=r.join(" ");t=(t=0===s?n:t+", "+n).replace(" And "," & ")})),t}var S=function(e){var t=e.countriesInfo,s=e.name,n=e.flag,l=e.map,u=e.guesses,o=Object(r.useState)(!1),b=Object(a.a)(o,2),c=b[0],i=b[1];return Object(h.jsxs)("div",{id:"country-guesser-failure-page",children:[!c&&Object(h.jsxs)("div",{id:"country-failure",children:[Object(h.jsx)("p",{style:{color:"#F66B0E"},children:"You failed. Better luck next time"}),Object(h.jsxs)("p",{children:["The answer was ",Object(h.jsx)("a",{href:l,children:s})]}),Object(h.jsxs)("p",{children:["Your answer history was: ",x(u)]}),Object(h.jsx)("img",{style:{border:"solid"},src:n,alt:"Country Flag"})]}),!c&&Object(h.jsx)("br",{}),!c&&Object(h.jsx)(p,{updateStatsCallback:function(){return{numberOfWins:JSON.parse(localStorage.getItem("numberOfWins"))||0,numberOfGames:(JSON.parse(localStorage.getItem("numberOfGames"))||0)+1,numberOfAttempts:(JSON.parse(localStorage.getItem("numberOfAttempts"))||0)+u.length,streak:0}},country:s,numberOfGuesses:u.length,succeeded:!1}),Object(h.jsx)(B,{countriesInfo:t,buttonText:"Try again",callback:i})]})};var y=function(e){var t=e.duplicateGuess,s=e.knownCountry;return Object(h.jsxs)("div",{style:{color:"#F66B0E"},id:"invalid-guess-feedback",children:[t&&Object(h.jsx)("p",{children:"You've already tried that country!"}),!s&&Object(h.jsx)("p",{children:"Enter a valid country name"})]})};var v=function(e){var t=e.correctGuesses,s=e.incorrectGuesses,r=e.borderingCountriesCount,n=e.incorrectCount,l=6-n,u="You have ".concat(l,n>=5?" life remaining":" lives remaining"),a=r-t.length,o=t.length===r-1?"There is ".concat(a," bordering country remaining"):"There are ".concat(a," bordering countries remaining");return Object(h.jsxs)("div",{id:"bordering-countries-guess-feedback",children:[t.length>0&&Object(h.jsxs)("p",{style:{color:"#F66B0E"},children:["Correct answers so far: ",x(t)]}),s.length>0&&Object(h.jsxs)("p",{style:{color:"#F66B0E"},children:["Incorrect answers so far: ",x(s)]}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:u}),Object(h.jsx)("p",{children:o}),Object(h.jsx)("br",{})]})};var C=function(e){var t=e.updateStatsCallback,s=e.country,n=e.numberOfGuesses,l=e.succeeded,u=Object(r.useState)(0),o=Object(a.a)(u,2),b=o[0],c=o[1],i=Object(r.useState)(0),d=Object(a.a)(i,2),j=d[0],O=d[1],g=Object(r.useState)(0),m=Object(a.a)(g,2),B=m[0],p=m[1],x=Object(r.useState)(0),S=Object(a.a)(x,2),y=S[0],v=S[1],C=Object(r.useState)(!1),I=Object(a.a)(C,2),w=I[0],k=I[1];return Object(r.useEffect)((function(){var e=t(),r=e.numberOfWins,u=e.numberOfGames,a=e.numberOfAttempts,o=e.numberOfCorrectAnswers,b=e.numberOfIncorrectAnswers,i=e.streak;c(r),p(u),O(a),v(i);try{localStorage.setItem("numberOfBorderWins",JSON.stringify(r)),localStorage.setItem("numberOfBorderGames",JSON.stringify(u)),localStorage.setItem("numberOfBorderAttempts",JSON.stringify(a)),localStorage.setItem("numberOfCorrectBorderAnswers",JSON.stringify(o)),localStorage.setItem("numberOfIncorrectBorderAnswers",JSON.stringify(b)),localStorage.setItem("borderStreak",JSON.stringify(i));var d=JSON.parse(localStorage.getItem("countryHighScores"))||f;if(l){var j=d[s].bestBorders;(!j||n<j)&&(d[s].bestBorders=n,k(!0))}else d[s].bestBorders=99;localStorage.setItem("countryHighScores",JSON.stringify(d))}catch(g){console.log("Unable to update stats")}}),[!0]),Object(h.jsx)("div",{id:"country-guesser-stats",children:B>0&&j>0&&Object(h.jsxs)("div",{children:[Object(h.jsx)("h2",{children:"Stats"}),l&&w&&Object(h.jsxs)("p",{style:{color:"#F66B0E"},children:["That was your best score for ",s,"!"]}),Object(h.jsxs)("p",{children:["Total games: ",B]}),Object(h.jsxs)("p",{children:["Number of wins: ",b]}),b>0&&y>0&&Object(h.jsxs)("p",{children:["You are on a ",y," game winning streak playing Bordering Countries"]})]})})};var I=function(e){var t=e.countriesInfo,s=e.name,n=e.map,l=e.borderingCountries,u=e.correctGuesses,o=e.guesses,b=o.length-u.length,c=l.length,i=l.filter((function(e){return!u.includes(e.toLowerCase())})),d=Object(r.useState)(!1),j=Object(a.a)(d,2),O=j[0],g=j[1];return Object(h.jsxs)("div",{id:"bordering-countries-failure-page",children:[l&&!O&&Object(h.jsxs)("div",{id:"bordering-countries-failure",children:[Object(h.jsx)("p",{style:{color:"#F66B0E"},children:"You failed. Better luck next time"}),Object(h.jsxs)("p",{children:["See ",s," on the ",Object(h.jsx)("a",{href:n,children:"map"})]}),0===u.length&&Object(h.jsxs)("p",{children:["You found none of the bordering countries and missed ",c]}),u.length>0&&Object(h.jsxs)("p",{children:["You found ",u.length," of ",c]}),u.length>0&&Object(h.jsxs)("p",{children:["You found: ",x(u)]}),i&&Object(h.jsxs)("p",{children:["You missed: ",x(i)]}),Object(h.jsxs)("p",{children:["Your answer history was: ",x(o)]})]}),!O&&Object(h.jsx)("br",{}),!O&&Object(h.jsx)(C,{updateStatsCallback:function(){var e=JSON.parse(localStorage.getItem("numberOfBorderWins"))||0,t=JSON.parse(localStorage.getItem("numberOfBorderGames"))||0,s=JSON.parse(localStorage.getItem("numberOfBorderAttempts"))||0,r=JSON.parse(localStorage.getItem("numberOfCorrectBorderAnswers"))||0,n=JSON.parse(localStorage.getItem("numberOfIncorrectBorderAnswers"))||0;return{numberOfWins:e,numberOfGames:t+1,numberOfAttempts:s+o.length,numberOfCorrectAnswers:r+u.length,numberOfIncorrectAnswers:n+b,streak:0}},country:s,numberOfGuesses:o.length,succeeded:!1}),Object(h.jsx)(B,{countriesInfo:t,buttonText:"Try again",callback:g})]})};var w=function(e){var t=e.countriesInfo,s=e.incorrectGuesses,n=e.correctGuesses,l=e.name,u=e.map,o=e.guesses,b=s.length,c=1===b?"answer":"answers",i=1===n.length?"Well done! You found the only bordering country of ".concat(l," with ").concat(b," incorrect ").concat(c):"Well done! You found the ".concat(n.length," bordering countries of ").concat(l," with ").concat(b," incorrect answers"),d=Object(r.useState)(!1),j=Object(a.a)(d,2),O=j[0],g=j[1];return Object(h.jsxs)("div",{children:[!O&&Object(h.jsxs)("div",{id:"successful-bordering-countries-game",children:[Object(h.jsx)("h5",{style:{color:"#F66B0E"},children:i}),Object(h.jsxs)("p",{children:["See ",Object(h.jsx)("a",{href:u,children:l})," on the map"]}),Object(h.jsxs)("p",{children:["Your answer history was: ",x(o)]})]}),!O&&Object(h.jsx)("br",{}),!O&&Object(h.jsx)(C,{updateStatsCallback:function(){var e=JSON.parse(localStorage.getItem("numberOfBorderWins"))||0,t=JSON.parse(localStorage.getItem("numberOfBorderGames"))||0,s=JSON.parse(localStorage.getItem("numberOfBorderAttempts"))||0,r=JSON.parse(localStorage.getItem("numberOfCorrectBorderAnswers"))||0,l=JSON.parse(localStorage.getItem("numberOfIncorrectBorderAnswers"))||0,u=JSON.parse(localStorage.getItem("borderStreak"))||0;return{numberOfWins:e+1,numberOfGames:t+1,numberOfAttempts:s+o.length,numberOfCorrectAnswers:r+n.length,numberOfIncorrectAnswers:l+b,streak:u+1}},country:l,numberOfGuesses:o.length,succeeded:!0}),Object(h.jsx)(B,{countriesInfo:t,buttonText:"Play again",callback:g})]})},k=s(98),N=s(49);s(69);var G=function(e){var t=e.possibleCountries,s=e.value,n=e.setValue,l=e.handleSubmit;return Object(h.jsxs)(k.a,{onSubmit:l,children:[Object(h.jsx)(r.Fragment,{children:Object(h.jsx)(k.a.Group,{className:"mb-3",children:Object(h.jsx)(N.a,{id:"country-search",onChange:n,options:t,placeholder:"Countries",selected:s,size:"lg"})})}),Object(h.jsx)(g.a,{variant:"light",type:"submit",children:"Guess"})]})};var A=function(e){var t=e.clues;return Object(h.jsx)("div",{id:"country-initial-clue",children:t&&Object(h.jsxs)("p",{children:["The remaining bordering countries begin with the following letters: ",t]})})};var J=function(e,t,s){var r=!1,n=!1,l=!1;return e.length>0&&t.find((function(t){t.toLowerCase()===e&&(n=!0,r=!0),s.includes(e)&&(l=!0)})),{isValidCountry:r,knownCountry:n,duplicateGuess:l}};var T=function(e){var t=e.countriesInfo,s=e.name,n=e.borderingCountries,l=e.possibleCountries,u=e.map,b=n.length>1?"There are ".concat(n.length," bordering countries to find in total"):"There is 1 bordering country to find",c=Object(r.useState)([]),i=Object(a.a)(c,2),d=i[0],j=i[1],O=Object(r.useState)(!1),g=Object(a.a)(O,2),m=g[0],B=g[1],f=Object(r.useState)([]),p=Object(a.a)(f,2),S=p[0],C=p[1],k=Object(r.useState)(0),N=Object(a.a)(k,2),T=N[0],E=N[1],F=Object(r.useState)([]),M=Object(a.a)(F,2),L=M[0],W=M[1],Y=Object(r.useState)(!1),z=Object(a.a)(Y,2),U=z[0],P=z[1],H=Object(r.useState)(!1),K=Object(a.a)(H,2),V=K[0],D=K[1],R=Object(r.useState)(!1),q=Object(a.a)(R,2),Z=q[0],Q=q[1],X=Object(r.useState)(!0),$=Object(a.a)(X,2),_=$[0],ee=$[1],te=Object(r.useState)([]),se=Object(a.a)(te,2),re=se[0],ne=se[1],le=Object(r.useState)(!1),ue=Object(a.a)(le,2),ae=ue[0],oe=ue[1],be=Object(r.useState)(),ce=Object(a.a)(be,2),ie=ce[0],de=ce[1];return Object(r.useEffect)((function(){T>=6&&D(!0);var e=function(){if(S.length>=4){var e=[];return n.forEach((function(t){if(!d.includes(t.toLowerCase())){var s=t.charAt(0).toUpperCase();e.push(s)}})),x(e)}}();de(e)})),Object(h.jsxs)("div",{id:"borders",children:[!Z&&!V&&Object(h.jsxs)("div",{children:[Object(h.jsx)("h2",{children:"Bordering Countries"}),Object(h.jsxs)("p",{children:["Your country is: ",s]}),Object(h.jsx)("p",{children:b}),Object(h.jsx)("div",{id:"borders-form",children:Object(h.jsx)(G,{possibleCountries:l,value:re,setValue:ne,handleSubmit:function(e){e.preventDefault(),ne([""]);var t=e.target[0].value.toLowerCase().trim(),r=J(t,l,L),u=r.isValidCountry,a=r.knownCountry,b=r.duplicateGuess;B(!1),t===s.toLowerCase()?(oe(!0),u=!1):oe(!1),ee(a),P(b),u&&a&&!b&&function(e){n.map((function(e){return e.toLowerCase()})).includes(e)?(j([].concat(Object(o.a)(d),[e])),B(!0),d.length+1===n.length&&Q(!0)):(C([].concat(Object(o.a)(S),[e])),E(T+1),B(!1));W([].concat(Object(o.a)(L),[e]))}(t)}})})]}),L.length>0&&!V&&!Z&&Object(h.jsx)(v,{correctGuesses:d,incorrectGuesses:S,incorrectCount:T,borderingCountriesCount:n.length}),!Z&&!m&&Object(h.jsxs)("div",{id:"invalid-border-guess-feedback",children:[Object(h.jsx)(y,{duplicateGuess:U,knownCountry:_}),ae&&Object(h.jsx)("p",{style:{color:"#F66B0E"},children:"That's the actual country! Guess the bordering ones instead"})]}),!Z&&!V&&ie&&Object(h.jsx)(A,{clues:ie}),V&&!Z&&Object(h.jsx)(I,{countriesInfo:t,name:s,map:u,correctGuesses:d,borderingCountries:n,guesses:L}),Z&&Object(h.jsx)(w,{countriesInfo:t,correctGuesses:d,incorrectGuesses:S,name:s,map:u,guesses:L})]})};var E=function(e){var t=e.countriesInfo,s=e.incorrectCount,n=e.guesses,l=e.name,u=e.borderingCountries,o=e.possibleCountries,j=e.flag,g=e.map,f=Object(r.useState)(!1),S=Object(a.a)(f,2),y=S[0],v=S[1],C=Object(r.useState)(!1),I=Object(a.a)(C,2),w=I[0],k=I[1];function N(){return(N=Object(d.a)(O.a.mark((function e(){return O.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:v(!0);case 1:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return Object(h.jsxs)("div",{children:[!y&&Object(h.jsxs)("div",{id:"successful-country-game",children:[0===s&&Object(h.jsxs)("h5",{style:{color:"#F66B0E"},children:["Amazing! You got ",Object(h.jsx)("a",{href:g,children:l})," in one!"]}),s>0&&Object(h.jsxs)("h5",{style:{color:"#F66B0E"},children:["Well done! It took you ",s+1," attempts to get ",Object(h.jsx)("a",{href:g,children:l})]}),s>0&&Object(h.jsxs)("p",{children:["Your answer history was: ",x(n)]}),Object(h.jsx)("img",{style:{border:"solid"},src:j,alt:"Country Flag"})]}),!y&&Object(h.jsx)("br",{}),!y&&Object(h.jsx)(p,{updateStatsCallback:function(){var e=JSON.parse(localStorage.getItem("numberOfWins"))||0,t=JSON.parse(localStorage.getItem("numberOfGames"))||0,s=JSON.parse(localStorage.getItem("numberOfAttempts"))||0,r=JSON.parse(localStorage.getItem("streak"))||0;return{numberOfWins:e+1,numberOfGames:t+1,numberOfAttempts:s+n.length,streak:r+1}},country:l,numberOfGuesses:n.length,succeeded:!0}),Object(h.jsx)(b.a,{children:Object(h.jsxs)(c.a,{children:[Object(h.jsx)(i.a,{xs:!0,lg:"2"}),Object(h.jsx)(i.a,{children:!w&&Object(h.jsx)(B,{countriesInfo:t,buttonText:"Play again",callback:function(){return N.apply(this,arguments)}})}),u.length>0&&Object(h.jsx)(i.a,{children:!y&&Object(h.jsx)(m,{callback:function(){k(!0),v(!0)},buttonText:"Guess the bordering countries"})}),Object(h.jsx)(i.a,{xs:!0,lg:"2"})]})}),y&&w&&Object(h.jsx)(T,{countriesInfo:t,name:l,borderingCountries:u,possibleCountries:o,map:g})]})};var F=function(e){var t=e.incorrectCount,s=e.guesses,r=e.duplicateGuess,n=e.guessedBorderingCountry;return Object(h.jsxs)("div",{id:"country-guess-feedback",children:[!r&&Object(h.jsxs)("p",{style:{color:"#F66B0E"},children:["Incorrect! That was attempt number ",t,"/6."]}),n&&Object(h.jsx)("p",{children:"You're getting close!"}),Object(h.jsxs)("p",{children:["Your answers so far: ",x(s)]})]})};var M=function(e){var t=e.countriesInfo,s=e.country,n=e.possibleCountries,l=s.name,u=s.population,d=s.flag,j=s.landlocked,O=s.region,g=s.subregion,m=s.map,B=s.capital,f=s.borderingCountries,p=Object(r.useState)(!1),x=Object(a.a)(p,2),v=x[0],C=x[1],I=Object(r.useState)(0),w=Object(a.a)(I,2),k=w[0],N=w[1],A=Object(r.useState)([]),T=Object(a.a)(A,2),M=T[0],L=T[1],W=Object(r.useState)(!1),Y=Object(a.a)(W,2),z=Y[0],U=Y[1],P=Object(r.useState)(!1),H=Object(a.a)(P,2),K=H[0],V=H[1],D=Object(r.useState)(!0),R=Object(a.a)(D,2),q=R[0],Z=R[1],Q=Object(r.useState)([""]),X=Object(a.a)(Q,2),$=X[0],_=X[1],ee=Object(r.useState)(!1),te=Object(a.a)(ee,2),se=te[0],re=te[1];return Object(r.useEffect)((function(){k>=6&&V(!0)})),Object(h.jsxs)("div",{id:"country-guesser",className:"component",children:[!K&&!v&&Object(h.jsxs)("div",{id:"country-info",children:[Object(h.jsx)("h2",{children:"Guess the Mystery Country"}),Object(h.jsx)("br",{}),Object(h.jsxs)(b.a,{children:[Object(h.jsxs)(c.a,{children:[Object(h.jsx)(i.a,{children:Object(h.jsxs)("p",{children:["Population: ",u]})}),Object(h.jsx)(i.a,{children:k>=1&&Object(h.jsxs)("p",{children:["Region: ",O]})}),Object(h.jsx)(i.a,{children:k>=2&&Object(h.jsx)("p",{children:j})}),Object(h.jsx)(i.a,{children:k>=3&&Object(h.jsxs)("p",{children:["Sub region: ",g]})})]}),Object(h.jsx)(c.a,{children:Object(h.jsx)(i.a,{children:k>=4&&Object(h.jsxs)("div",{children:[Object(h.jsx)("p",{children:"Flag: "}),Object(h.jsx)("img",{style:{border:"solid"},src:d,alt:"Country Flag"})]})})}),Object(h.jsx)(c.a,{children:Object(h.jsxs)(i.a,{children:[Object(h.jsx)("br",{}),k>=5&&Object(h.jsxs)("p",{children:["Capital city: ",B]})]})})]})]}),Object(h.jsxs)("div",{id:"country-form",children:[Object(h.jsx)("br",{}),!v&&!K&&Object(h.jsx)(G,{possibleCountries:n,value:$,setValue:_,handleSubmit:function(e){e.preventDefault(),_([""]);var t=e.target[0].value.toLowerCase().trim(),s=J(t,n,M),r=s.isValidCountry,u=s.knownCountry,a=s.duplicateGuess;Z(u),U(a),r&&u&&!a&&function(e){Z(!0),U(!1),e===l.toLowerCase()?C(!0):(N(k+1),C(!1),function(e){!v&&f.find((function(t){return t.toLowerCase()===e}))?re(!0):re(!1)}(e));L([].concat(Object(o.a)(M),[e]))}(t)}})]}),Object(h.jsx)(y,{duplicateGuess:z,knownCountry:q}),!v&&M.length>0&&!K&&Object(h.jsx)(F,{guesses:M,incorrectCount:k,duplicateGuess:z,guessedBorderingCountry:se}),v&&!K&&Object(h.jsx)(E,{countriesInfo:t,name:l,map:m,flag:d,incorrectCount:k,guesses:M,borderingCountries:f,possibleCountries:n}),K&&Object(h.jsx)(S,{countriesInfo:t,name:l,map:m,flag:d,guesses:M})]})},L=s(48),W=s.n(L);function Y(){return(Y=Object(d.a)(O.a.mark((function e(){var t,s,r,n,l,u;return O.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,W.a.get("https://restcountries.com/v3.1/all");case 3:return t=e.sent,s=t.data,r=[],n=[],l=["Taiwan","Greenland","Palestine","Kosovo","Western Sahara"],s.forEach((function(e){var t=e.name.common;if(e.unMember&&e.independent||l.includes(t)){r.push(t);var s={name:t,code:e.cca3};n.push(s)}})),u={countriesArray:r.sort(),countryCodeMapping:n,responseBody:s},e.abrupt("return",u);case 13:e.prev=13,e.t0=e.catch(0),console.log(e.t0);case 16:case"end":return e.stop()}}),e,null,[[0,13]])})))).apply(this,arguments)}function z(e,t){var s=[];return e&&e.forEach((function(e){t.find((function(t){t.code===e&&s.push(t.name)}))})),s}var U=function(){return Y.apply(this,arguments)};var P=function(e){var t=e.countriesInfo,s=t.countryCodeMapping,r=t.countriesArray,n=function(e,t,s){var r,n=e[Math.floor(Math.random()*e.length)],l=t.find((function(e){return e.name.common.toLowerCase()===n.toLowerCase()}));return{name:l.name.common,borderingCountries:z(l.borders,s),capital:x(l.capital),landlocked:l.landlocked?"The country is landlocked":"The country has a coastline",map:l.maps.googleMaps,population:(r=l.population,r.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")),flag:l.flags.png,region:l.region,subregion:l.subregion}}(r,t.responseBody,s);return Object(h.jsx)("div",{id:"country",children:n&&Object(h.jsx)(M,{countriesInfo:t,country:n,possibleCountries:r})})},H=s(97);var K=function(){var e=Object(r.useState)(!1),t=Object(a.a)(e,2),s=t[0],n=t[1],l=Object(r.useState)("Show Stats"),u=Object(a.a)(l,2),o=u[0],b=u[1],c=JSON.parse(localStorage.getItem("countryHighScores"))||f,i=Object.entries(c).map((function(e){return{name:e[0],stats:e[1]}})),d=JSON.parse(localStorage.getItem("numberOfGames")),j=JSON.parse(localStorage.getItem("numberOfWins")),O=JSON.parse(localStorage.getItem("numberOfAttempts")),g=JSON.parse(localStorage.getItem("streak")),B=JSON.parse(localStorage.getItem("numberOfBorderGames")),p=JSON.parse(localStorage.getItem("numberOfBorderWins")),x=JSON.parse(localStorage.getItem("numberOfCorrectBorderAnswers")),S=JSON.parse(localStorage.getItem("numberOfIncorrectBorderAnswers")),y=JSON.parse(localStorage.getItem("borderStreak"));return Object(h.jsxs)("div",{id:"stats-page",children:[Object(h.jsx)("br",{}),Object(h.jsx)(m,{callback:function(){s?(n(!1),b("Show Stats")):(n(!0),b("Hide Stats"))},buttonText:o}),s&&Object(h.jsxs)("div",{children:[Object(h.jsx)("br",{}),Object(h.jsx)("h2",{children:"Country Guesser Stats"}),Object(h.jsxs)("p",{children:["Total games: ",d]}),Object(h.jsxs)("p",{children:["Number of wins: ",j]}),j>0&&Object(h.jsxs)("p",{children:["Win percentage: ",(j/d*100).toFixed(1),"%"]}),j>0&&Object(h.jsxs)("p",{children:["Number of guesses per correct answer: ",(O/j).toFixed(1)]}),j>0&&Object(h.jsxs)("p",{children:["Streak: ",g]}),Object(h.jsx)("br",{}),Object(h.jsx)("h2",{children:"Bordering Countries Guesser Stats"}),Object(h.jsxs)("p",{children:["Total games: ",B]}),Object(h.jsxs)("p",{children:["Number of wins: ",p]}),p>0&&Object(h.jsxs)("p",{children:["Win percentage: ",(p/B*100).toFixed(1),"%"]}),x>0&&Object(h.jsxs)("p",{children:["Average number of correct answers per game: ",(x/B).toFixed(1)]}),S>0&&Object(h.jsxs)("p",{children:["Average number of incorrect answers per game: ",(S/B).toFixed(1)]}),p>0&&Object(h.jsxs)("p",{children:["Streak: ",y]}),Object(h.jsx)("br",{}),Object(h.jsx)("h2",{children:"Country Stats"}),Object(h.jsx)(H.a,{id:"country-stats",children:i.map((function(e,t){if(e.stats.best||e.stats.bestBorders){var s=99===e.stats.best?"FAILED":e.stats.best,r=99===e.stats.bestBorders?"FAILED":e.stats.bestBorders;return Object(h.jsxs)(H.a.Item,{children:[Object(h.jsx)("b",{children:e.name})," ",Object(h.jsx)("br",{}),"Country Guesser High Score: ",s||"N/A"," ",Object(h.jsx)("br",{}),"Bordering Countries Guesser High Score: ",r||"N/A"]},t)}}))})]})]})};s(89);var V=function(){var e=Object(r.useState)(),t=Object(a.a)(e,2),s=t[0],n=t[1],l=Object(r.useState)(!1),u=Object(a.a)(l,2),o=u[0],b=u[1];return Object(r.useEffect)((function(){o||U().then((function(e){b(!0),n(e)}))})),Object(h.jsxs)("div",{id:"app",children:[Object(h.jsx)("div",{id:"header",children:Object(h.jsx)("h1",{style:{fontSize:"4rem"},children:"FUN WITH COUNTRIES!"})}),s&&Object(h.jsx)(P,{countriesInfo:s}),Object(h.jsx)(K,{}),Object(h.jsx)("link",{rel:"stylesheet",href:"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css",integrity:"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3",crossOrigin:"anonymous"})]})};u.a.render(Object(h.jsx)(n.a.StrictMode,{children:Object(h.jsx)(V,{})}),document.getElementById("root"))}},[[90,1,2]]]);
//# sourceMappingURL=main.303a0265.chunk.js.map